{
  "name": "weewee-def-update",
  "version": "1.0.0",
  "description": "Comprehensive system for managing definitions, schemas, and doctrine",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build && npm run yolo:compliance",
    "preview": "vite preview",
    "start": "vite preview",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ui": "vitest --ui",
    "lint": "eslint src --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint src --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write src/**/*.{ts,tsx,js,jsx,json}",
    "format:check": "prettier --check src/**/*.{ts,tsx,js,jsx,json}",
    "clean": "rimraf dist node_modules/.cache",
    "clean:all": "rimraf dist node_modules package-lock.json",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "deploy:vercel": "tsx scripts/deployment-manager.ts deploy vercel",
    "deploy:render": "tsx scripts/deployment-manager.ts deploy render",
    "deploy:netlify": "tsx scripts/deployment-manager.ts deploy netlify",
    "deploy:all": "npm-run-all --parallel deploy:vercel deploy:render deploy:netlify",
    "vercel": "vercel",
    "vercel:prod": "vercel --prod",
    "netlify": "netlify",
    "netlify:deploy": "netlify deploy --prod --dir=dist",
    "sync:neon": "node scripts/sync-neon.js",
    "sync:validate": "node scripts/validate-sync.js",
    "module:add": "node scripts/add-module.js",
    "module:generate": "node scripts/generate-module.js",
    "module:docs": "node scripts/generate-docs.js",
    "claude:chat": "tsx scripts/claude-auto.ts chat",
    "claude:schema": "tsx scripts/claude-auto.ts schema",
    "claude:validate": "tsx scripts/claude-auto.ts validate",
    "claude:module": "tsx scripts/claude-auto.ts module",
    "claude:sync": "tsx scripts/claude-auto.ts sync",
    "claude:config": "tsx scripts/claude-auto.ts config",
    "claude:test": "tsx scripts/test-claude-auto.ts",
    "claude:setup": "tsx scripts/setup-claude.ts",
    "git:status": "tsx scripts/git-manager.ts status",
    "git:pull": "tsx scripts/git-manager.ts pull",
    "git:push": "tsx scripts/git-manager.ts push",
    "git:commit": "tsx scripts/git-manager.ts commit",
    "yolo:enable": "tsx scripts/yolo-mode.ts enable",
    "yolo:disable": "tsx scripts/yolo-mode.ts disable",
    "yolo:status": "tsx scripts/yolo-mode.ts status",
    "yolo:risk": "tsx scripts/yolo-mode.ts risk",
    "yolo:allow": "tsx scripts/yolo-mode.ts allow",
    "yolo:compliance": "tsx scripts/yolo-doctrine-compliance.ts run",
    "yolo:compliance:strict": "tsx scripts/yolo-doctrine-compliance.ts run --strict",
    "yolo:compliance:quick": "tsx scripts/yolo-doctrine-compliance.ts run --no-fail",
    "montecarlo:run": "tsx scripts/montecarlo-breaker.ts run",
    "montecarlo:quick": "tsx scripts/montecarlo-breaker.ts run 100",
    "montecarlo:stress": "tsx scripts/montecarlo-breaker.ts run 5000",
    "stress:run": "tsx scripts/app-stress-tester.ts run",
    "stress:quick": "tsx scripts/app-stress-tester.ts run 50",
    "stress:break": "tsx scripts/app-stress-tester.ts run 500",
    "setup:run": "tsx scripts/setup-machine.ts run",
    "setup:quick": "tsx scripts/setup-machine.ts run --no-tests --no-vscode",
    "setup:full": "tsx scripts/setup-machine.ts run --docker --auto-commit",
    "playwright:test": "tsx scripts/playwright-test.ts",
    "playwright:install": "npx playwright install",
    "firecrawl:test": "tsx scripts/firecrawl-test.ts",
    "tools:install": "tsx scripts/install-tools.ts",
    "list:pretty": "powershell -Command \"Get-ChildItem | Format-Table -AutoSize\"",
    "list:tree": "powershell -Command \"Get-ChildItem -Recurse -Directory | Select-Object FullName\"",
    "list:detailed": "powershell -Command \"Get-ChildItem | Select-Object Name, Length, LastWriteTime, Mode\"",
    "exa:list": "exa --long --header --git --icons",
    "exa:tree": "exa --tree --level=2 --icons",
    "abacus:test": "tsx scripts/abacus-ai-setup.ts test",
    "abacus:models": "tsx scripts/abacus-ai-setup.ts models",
    "abacus:deployments": "tsx scripts/abacus-ai-setup.ts deployments",
    "abacus:create-model": "tsx scripts/abacus-ai-setup.ts create-model",
    "abacus:deploy": "tsx scripts/abacus-ai-setup.ts deploy",
    "abacus:predict": "tsx scripts/abacus-ai-setup.ts predict",
    "perplexity:chat": "tsx scripts/perplexity-integration.ts chat",
    "perplexity:code": "tsx scripts/perplexity-integration.ts generate-code",
    "perplexity:analyze": "tsx scripts/perplexity-integration.ts analyze",
    "perplexity:tests": "tsx scripts/perplexity-integration.ts generate-tests",
    "perplexity:debug": "tsx scripts/perplexity-integration.ts debug",
    "perplexity:models": "tsx scripts/perplexity-integration.ts models",
    "perplexity:explain": "tsx scripts/perplexity-integration.ts explain",
    "perplexity:brainstorm": "tsx scripts/perplexity-integration.ts brainstorm",
    "ai:chat": "tsx scripts/ai-master-integration.ts chat",
    "ai:code": "tsx scripts/ai-master-integration.ts generate-code",
    "ai:review": "tsx scripts/ai-master-integration.ts review-code",
    "ai:debug": "tsx scripts/ai-master-integration.ts debug",
    "ai:tests": "tsx scripts/ai-master-integration.ts generate-tests",
    "ai:explain": "tsx scripts/ai-master-integration.ts explain",
    "ai:brainstorm": "tsx scripts/ai-master-integration.ts brainstorm",
    "ai:compare": "tsx scripts/ai-master-integration.ts compare",
    "ai:models": "tsx scripts/ai-master-integration.ts models",
    "ai:auto": "tsx scripts/ai-master-integration.ts auto",
    "cloud:health": "tsx scripts/cloud-integration.ts health",
    "cloud:neon": "tsx scripts/cloud-integration.ts neon",
    "cloud:firebase": "tsx scripts/cloud-integration.ts firebase",
    "cloud:bigquery": "tsx scripts/cloud-integration.ts bigquery",
    "cloud:deerflow": "tsx scripts/cloud-integration.ts deerflow",
    "cloud:mindpal": "tsx scripts/cloud-integration.ts mindpal",
    "cloud:services": "tsx scripts/cloud-integration.ts services"
  },
  "keywords": [
    "definitions",
    "schemas",
    "doctrine",
    "neon",
    "compliance",
    "stamped"
  ],
  "author": "djb258",
  "license": "MIT",
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@netlify/functions": "^4.1.9",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-links": "^9.0.15",
    "@storybook/blocks": "^8.6.14",
    "@storybook/react": "^9.0.15",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.0.0",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@types/testing-library__react": "^10.0.1",
    "@types/testing-library__user-event": "^4.1.1",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vercel/node": "^5.3.4",
    "@vercel/static-build": "^2.7.14",
    "@vitejs/plugin-react": "^4.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "commitizen": "^4.3.1",
    "concurrently": "^9.2.0",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.0.0",
    "happy-dom": "^18.0.1",
    "husky": "^9.1.7",
    "jest": "^29.0.0",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.2",
    "netlify-cli": "^22.2.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.0.0",
    "rimraf": "^6.0.1",
    "tsx": "^4.20.3",
    "typescript": "^5.0.0",
    "vercel": "^44.2.13",
    "vite": "^7.0.0",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.56.0",
    "@google-cloud/bigquery": "^8.1.0",
    "@google/generative-ai": "^0.24.1",
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^5.1.1",
    "@neondatabase/serverless": "^1.0.1",
    "@tanstack/react-table": "^8.21.3",
    "@tremor/react": "^3.18.7",
    "@types/react-datepicker": "^6.2.0",
    "autoprefixer": "^10.0.0",
    "clsx": "^2.1.1",
    "dotenv": "^17.1.0",
    "firebase-admin": "^13.4.0",
    "firecrawl": "^1.29.1",
    "framer-motion": "^12.23.0",
    "lucide-react": "^0.525.0",
    "mermaid": "^11.8.1",
    "openai": "^5.8.2",
    "perplexity": "^1.0.1",
    "playwright": "^1.53.2",
    "postcss": "^8.0.0",
    "react": "^18.0.0",
    "react-datepicker": "^8.4.0",
    "react-dom": "^18.0.0",
    "react-hook-form": "^7.60.0",
    "react-hot-toast": "^2.5.2",
    "react-select": "^5.10.1",
    "recharts": "^3.0.2",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.0.0",
    "zod": "^3.25.67"
  }
}
